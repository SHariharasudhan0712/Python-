class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None
    def is_empty(self):
        return self.head is None
    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node
    def prepend(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
    def delete(self, data):
        if self.head is None:
            return
        if self.head.data == data:
            self.head = self.head.next
            return
        current = self.head
        while current.next:
            if current.next.data == data:
                current.next = current.next.next
                return
            current = current.next
    def search(self, data):
        current = self.head
        while current:
            if current.data == data:
                return True
            current = current.next
        return False
    def display(self):
        current = self.head
        while current:
            print(current.data, end="-->")
            current = current.next
        print("None")
Linked_list= LinkedList()
Linked_list.append(1)
Linked_list.append(2)
Linked_list.append(3)
print("Linked list:")
Linked_list.display()
Linked_list.prepend(0)
Linked_list.prepend(-1)
print("Linked list after prepend :")
Linked_list.display()
Linked_list.delete(0)
Linked_list.delete(3)
print("Linked list after deletions:")
Linked_list.display()
print("Search for 1:", Linked_list.search(1))
print("Search for 5:", Linked_list.search(5))
